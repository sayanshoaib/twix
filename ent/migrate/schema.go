// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "comment_id", Type: field.TypeUUID},
		{Name: "content", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "tweet_comments", Type: field.TypeInt, Nullable: true},
		{Name: "user_comments", Type: field.TypeInt, Nullable: true},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_tweets_comments",
				Columns:    []*schema.Column{CommentsColumns[5]},
				RefColumns: []*schema.Column{TweetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "comments_users_comments",
				Columns:    []*schema.Column{CommentsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RatesColumns holds the columns for the "rates" table.
	RatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rate_id", Type: field.TypeUUID},
		{Name: "reaction", Type: field.TypeEnum, Enums: []string{"like", "funny", "love", "sad"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "tweet_rates", Type: field.TypeInt, Nullable: true},
		{Name: "user_rates", Type: field.TypeInt, Nullable: true},
	}
	// RatesTable holds the schema information for the "rates" table.
	RatesTable = &schema.Table{
		Name:       "rates",
		Columns:    RatesColumns,
		PrimaryKey: []*schema.Column{RatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rates_tweets_rates",
				Columns:    []*schema.Column{RatesColumns[5]},
				RefColumns: []*schema.Column{TweetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rates_users_rates",
				Columns:    []*schema.Column{RatesColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TweetsColumns holds the columns for the "tweets" table.
	TweetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "tweet_id", Type: field.TypeUUID},
		{Name: "content", Type: field.TypeString},
		{Name: "media", Type: field.TypeJSON},
		{Name: "place", Type: field.TypeString, Nullable: true},
		{Name: "reply_count", Type: field.TypeInt, Default: 0},
		{Name: "retweet_count", Type: field.TypeInt, Default: 0},
		{Name: "rate_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_tweets", Type: field.TypeInt, Nullable: true},
	}
	// TweetsTable holds the schema information for the "tweets" table.
	TweetsTable = &schema.Table{
		Name:       "tweets",
		Columns:    TweetsColumns,
		PrimaryKey: []*schema.Column{TweetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tweets_users_tweets",
				Columns:    []*schema.Column{TweetsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString, Default: "unknown"},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CommentsTable,
		RatesTable,
		TweetsTable,
		UsersTable,
	}
)

func init() {
	CommentsTable.ForeignKeys[0].RefTable = TweetsTable
	CommentsTable.ForeignKeys[1].RefTable = UsersTable
	RatesTable.ForeignKeys[0].RefTable = TweetsTable
	RatesTable.ForeignKeys[1].RefTable = UsersTable
	TweetsTable.ForeignKeys[0].RefTable = UsersTable
}
