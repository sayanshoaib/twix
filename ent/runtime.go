// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"
	"twix/ent/comment"
	"twix/ent/rate"
	"twix/ent/schema"
	"twix/ent/tweet"
	"twix/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[1].Descriptor()
	// comment.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	comment.ContentValidator = commentDescContent.Validators[0].(func(string) error)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[2].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(time.Time)
	// commentDescUpdatedAt is the schema descriptor for updated_at field.
	commentDescUpdatedAt := commentFields[3].Descriptor()
	// comment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	comment.DefaultUpdatedAt = commentDescUpdatedAt.Default.(time.Time)
	// comment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	comment.UpdateDefaultUpdatedAt = commentDescUpdatedAt.UpdateDefault.(func() time.Time)
	rateFields := schema.Rate{}.Fields()
	_ = rateFields
	// rateDescCreatedAt is the schema descriptor for created_at field.
	rateDescCreatedAt := rateFields[2].Descriptor()
	// rate.DefaultCreatedAt holds the default value on creation for the created_at field.
	rate.DefaultCreatedAt = rateDescCreatedAt.Default.(time.Time)
	// rateDescUpdatedAt is the schema descriptor for updated_at field.
	rateDescUpdatedAt := rateFields[3].Descriptor()
	// rate.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	rate.DefaultUpdatedAt = rateDescUpdatedAt.Default.(time.Time)
	// rate.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	rate.UpdateDefaultUpdatedAt = rateDescUpdatedAt.UpdateDefault.(func() time.Time)
	tweetFields := schema.Tweet{}.Fields()
	_ = tweetFields
	// tweetDescContent is the schema descriptor for content field.
	tweetDescContent := tweetFields[1].Descriptor()
	// tweet.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	tweet.ContentValidator = tweetDescContent.Validators[0].(func(string) error)
	// tweetDescReplyCount is the schema descriptor for reply_count field.
	tweetDescReplyCount := tweetFields[4].Descriptor()
	// tweet.DefaultReplyCount holds the default value on creation for the reply_count field.
	tweet.DefaultReplyCount = tweetDescReplyCount.Default.(int)
	// tweet.ReplyCountValidator is a validator for the "reply_count" field. It is called by the builders before save.
	tweet.ReplyCountValidator = tweetDescReplyCount.Validators[0].(func(int) error)
	// tweetDescRetweetCount is the schema descriptor for retweet_count field.
	tweetDescRetweetCount := tweetFields[5].Descriptor()
	// tweet.DefaultRetweetCount holds the default value on creation for the retweet_count field.
	tweet.DefaultRetweetCount = tweetDescRetweetCount.Default.(int)
	// tweet.RetweetCountValidator is a validator for the "retweet_count" field. It is called by the builders before save.
	tweet.RetweetCountValidator = tweetDescRetweetCount.Validators[0].(func(int) error)
	// tweetDescRateCount is the schema descriptor for rate_count field.
	tweetDescRateCount := tweetFields[6].Descriptor()
	// tweet.DefaultRateCount holds the default value on creation for the rate_count field.
	tweet.DefaultRateCount = tweetDescRateCount.Default.(int)
	// tweet.RateCountValidator is a validator for the "rate_count" field. It is called by the builders before save.
	tweet.RateCountValidator = tweetDescRateCount.Validators[0].(func(int) error)
	// tweetDescCreatedAt is the schema descriptor for created_at field.
	tweetDescCreatedAt := tweetFields[7].Descriptor()
	// tweet.DefaultCreatedAt holds the default value on creation for the created_at field.
	tweet.DefaultCreatedAt = tweetDescCreatedAt.Default.(time.Time)
	// tweetDescUpdatedAt is the schema descriptor for updated_at field.
	tweetDescUpdatedAt := tweetFields[8].Descriptor()
	// tweet.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tweet.DefaultUpdatedAt = tweetDescUpdatedAt.Default.(time.Time)
	// tweet.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tweet.UpdateDefaultUpdatedAt = tweetDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescAge is the schema descriptor for age field.
	userDescAge := userFields[0].Descriptor()
	// user.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	user.AgeValidator = userDescAge.Validators[0].(func(int) error)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
}
